#include <iostream>
#include <string>
using namespace std;

class Animal
{
	double AP, HP;
	string name;
public:
	void setAP(double aAP = 1){
		AP = aAP;
	}
	void setHP(double aHP = 100){
		HP = aHP;
	}
	void virtual attack(Animal * victim){
		victim.getHP() -= getAP();
		cout << getName() << " -> " << victim.getName() << "  " << getAP() << "!" << endl;
	}
	double getAP(){
		return AP;
	}
	string & getName(){
		return name;
	}
	double & getHP(){
		return HP;
	}
};

class Dog : public Animal
{
public:
	Dog(double aHP, double aAP){
		setAP(aHP);
		setHP(aAP);
		getName() = "Dog";
	}
	// void attack(){
	// 	cout << "Dog - " << getAP() << " !" << endl;
	// }
};

class BK : public Animal
{
public:
	BK(double aHP, double aAP){
		setHP(aHP);
		setAP(aAP);
		getName() = "BK";
	}
	// void attack(){
	// 	cout << "BK - " << getAP() << " !" << endl;
	// }
};

class Court
{
	Animal * p1, p2;
public:
	Court(Animal * aP1, Animal * aP2){
		p1 = aP1, p2 = aP2;
	}
	void fight(){
		for(int i = 1; p1.getHP() && p2.getHP(); i++){
			cout << "Round " << i << " :" << endl;
			p1.attack(p2);
			p2.attack(p1);
			cout << p1.getName() << "-" << p1.getHP() << "\t" 
			<< p2.getName() << "-" << p2.getHP() << endl;
		}
	}
};

int main(int argc, char const *argv[])
{
	BK bk(5);
	Dog dog(6);

	Court court(&bk, &dog);
	court.fight();

	return 0;
}
